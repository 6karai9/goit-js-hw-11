{"version":3,"sources":["js/source-refs.js","js/utils.js","js/timer.js","index.js"],"names":["colors","invColors","refs","FINAL_DATE","body","document","querySelector","changeColorStart","changeColorStop","timeoutIdColor","COLOR_DELAY","days","hours","mins","secs","colons","querySelectorAll","startCount","resetCount","onStartColorChange","setInterval","randomNumb","Math","round","random","length","style","backgroundColor","color","borderColor","disabled","onStopColorChange","clearInterval","Timer","constructor","daysEl","hoursEl","minsEl","secsEl","colonEl","isActive","intervalIdCountDown","nowDate","Date","now","deltaTime","FIN_DATE","getTimeComponents","textContent","colonBlinking","time","pad","floor","value","String","padStart","forEach","colon","classList","contains","remove","add","getTime","timer","window","addEventListener","stopCount","delay","ms","Promise","resolve","reject","setTimeout","logger","console","log","then","users","name","active","toggleUserState","allUsers","userName","map","user","loggerTwo","updatedUsers","table","makeTransaction","transaction","randomIntegerFromInterval","id","min","max","logSuccess","obj","logError","warn","amount","catch"],"mappings":"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","file":"src.2edf1f54.js","sourceRoot":"../src","sourcesContent":["export const colors = [\n  '#FFFFFF',\n  '#2196F3',\n  '#4CAF50',\n  '#FF9800',\n  '#009688',\n  '#795548',\n];\n\nexport const invColors = [\n  '#000000',\n  '#de690c',\n  '#b350af',\n  '#0067ff',\n  '#ff6977',\n  '#86aab7',\n];\n\nexport const refs = {\n  FINAL_DATE: 'September 24,2021',\n  body: document.querySelector('body'),\n  changeColorStart: document.querySelector('button[data-action=\"start\"]'),\n  changeColorStop: document.querySelector('button[data-action=\"stop\"]'),\n  timeoutIdColor: null,\n  COLOR_DELAY: 1000,\n  days: document.querySelector('[data-value=\"days\"]'),\n  hours: document.querySelector('[data-value=\"hours\"]'),\n  mins: document.querySelector('[data-value=\"mins\"]'),\n  secs: document.querySelector('[data-value=\"secs\"]'),\n  colons: document.querySelectorAll('[data-value=\"colon\"]'),\n  startCount: document.querySelector('button[data-action=\"start-count\"]'),\n  resetCount: document.querySelector('button[data-action=\"reset-count\"]')\n};\n\n","import {\n  colors,\n  invColors,\n  refs,\n} from './source-refs';\n\nexport function onStartColorChange() {\n  refs.timeoutIdColor = setInterval(() => {\n  let randomNumb = Math.round(Math.random() * (colors.length - 1));\n  refs.body.style.backgroundColor = `${colors[randomNumb]}`;\n  refs.body.style.color = `${invColors[randomNumb]}`; \n  refs.changeColorStart.style.borderColor = `${invColors[randomNumb]}`;\n  refs.changeColorStop.style.borderColor = `${invColors[randomNumb]}`;\n  refs.startCount.style.borderColor = `${invColors[randomNumb]}`;\n  refs.resetCount.style.borderColor = `${invColors[randomNumb]}`;\n  }, refs.COLOR_DELAY);\n\n  refs.changeColorStart.disabled = true;\n};\n\nexport function onStopColorChange() {\n  clearInterval(refs.timeoutIdColor);\n\n  refs.changeColorStart.disabled = false;\n}\n","export class Timer {\n  constructor(FINAL_DATE, daysEl, hoursEl, minsEl, secsEl, colonEl) {\n    this.FIN_DATE = new Date(FINAL_DATE).getTime();\n    this.isActive = false;\n    this.intervalIdCountDown = null;\n    this.daysEl = daysEl;\n    this.hoursEl = hoursEl;\n    this.minsEl = minsEl;\n    this.secsEl = secsEl;\n    this.colonEl = colonEl;\n  }\n\n  startCount = () => {\n    if (this.isActive) {\n      return;\n    }\n    this.intervalIdCountDown = setInterval(() => {\n      this.isActive = true;\n      const nowDate = Date.now();\n      const deltaTime = this.FIN_DATE - nowDate;\n      const { days, hours, mins, secs } = this.getTimeComponents(deltaTime);\n      // console.log(`${days}:${hours}:${mins}:${secs}`);\n      this.daysEl.textContent = `${days}`;\n      this.hoursEl.textContent = `${hours}`;\n      this.minsEl.textContent = `${mins}`;\n      this.secsEl.textContent = `${secs}`;\n      this.colonBlinking();\n      \n    }, 1000);\n  }\n\n  stopCount = () =>  {\n    clearInterval(this.intervalIdCountDown);\n    this.daysEl.textContent = '00';\n    this.hoursEl.textContent = '00';\n    this.minsEl.textContent = '00';\n    this.secsEl.textContent = '00';\n    this.isActive = false;\n  }\n\n  getTimeComponents = (time) => {\n    const days = this.pad(Math.floor(time / (1000 * 60 * 60 * 24)));\n    const hours = this.pad(Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)));\n    const mins = this.pad(Math.floor((time % (1000 * 60 * 60)) / (1000 * 60)));\n    const secs = this.pad(Math.floor((time % (1000 * 60)) / 1000));\n    return {days, hours, mins, secs}\n  }\n\n   pad = (value) => {\n    return String(value).padStart(2, '0');\n  }\n\n  colonBlinking = () => {\n    this.colonEl.forEach((colon) => {\n      if (colon.classList.contains(\"opacity\")) {\n        colon.classList.remove(\"opacity\");\n      } else {\n        colon.classList.add(\"opacity\");\n      }\n    })\n  }\n}","import './styles/styles.css';\n\nimport { colors, invColors, refs } from './js/source-refs';\n\nimport { onStartColorChange, onStopColorChange } from './js/utils';\n\nimport { Timer } from './js/timer';\n\nconst { FINAL_DATE, days, hours, mins, secs, colons } = refs;\nconst timer = new Timer(FINAL_DATE, days, hours, mins, secs, colons);\n\nwindow.addEventListener('DOMContentLoaded', timer.startCount);\nrefs.changeColorStart.addEventListener('click', onStartColorChange);\nrefs.changeColorStop.addEventListener('click', onStopColorChange);\nrefs.startCount.addEventListener('click', timer.startCount);\nrefs.resetCount.addEventListener('click', timer.stopCount);\n\n// *TASK 1\n\nconst delay = ms => {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      resolve(ms);\n    }, ms);\n  });\n};\n\nconst logger = time => console.log(`TASK 1: Resolved after ${time}ms`);\n\n// ÐÑÐ·Ð¾Ð²Ñ ÑÑÐ½ÐºÑÐ¸Ð¸ Ð´Ð»Ñ Ð¿ÑÐ¾Ð²ÐµÑÐºÐ¸\ndelay(2000).then(logger); // Resolved after 2000ms\ndelay(1000).then(logger); // Resolved after 1000ms\ndelay(1500).then(logger); // Resolved after 1500ms\n\n// *TASK 2\n\nconsole.log('TASK 2');\n\nconst users = [\n  { name: 'Mango', active: true },\n  { name: 'Poly', active: false },\n  { name: 'Ajax', active: true },\n  { name: 'Lux', active: false },\n];\n\nconst toggleUserState = (allUsers, userName) => {\n  return new Promise((resolve, reject) => {\n    const updatedUsers = allUsers.map(user =>\n      user.name === userName ? { ...user, active: !user.active } : user,\n    );\n    resolve(updatedUsers);\n  });\n};\n\nconst loggerTwo = updatedUsers => console.table(updatedUsers);\n\ntoggleUserState(users, 'Mango').then(loggerTwo);\ntoggleUserState(users, 'Lux').then(loggerTwo);\n\n// *TASK 3\n\nconst makeTransaction = transaction => {\n  return new Promise((resolve, reject) => {\n    const delay = randomIntegerFromInterval(200, 500);\n    setTimeout(() => {\n      const canProcess = Math.random() > 0.3;\n\n      if (canProcess) {\n        resolve({ id: transaction.id, time: delay });\n      }\n      reject(transaction.id);\n    }, delay);\n  });\n};\n\nconst randomIntegerFromInterval = (min, max) => {\n  return Math.floor(Math.random() * (max - min + 1) + min);\n};\n\nconst logSuccess = obj => {\n  console.log(`TASK 3: Transaction ${obj.id} processed in ${obj.time}ms`);\n};\n\nconst logError = id => {\n  console.warn(`TASK 3: Error processing transaction ${id}. Please try again later.`);\n};\n\nmakeTransaction({ id: 70, amount: 150 }).then(logSuccess).catch(logError);\n\nmakeTransaction({ id: 71, amount: 230 }).then(logSuccess).catch(logError);\n\nmakeTransaction({ id: 72, amount: 75 }).then(logSuccess).catch(logError);\n\nmakeTransaction({ id: 73, amount: 100 }).then(logSuccess).catch(logError);\n"]}